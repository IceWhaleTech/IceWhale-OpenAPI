openapi: 3.0.3

info:
  title: ZimaOS API
  version: v2

servers:
  - url: /v2/zimaos

tags:
  - name: Connect methods
    description: |-
      (TODO)

  - name: Health methods
    description: |-
      (TODO)

  - name: Device methods
    description: |-
      (TODO)

  - name: File methods
    description: |-
      (TODO)

  - name: GPU methods
    description: |-
      (TODO)

  - name: Network methods
    description: |-
      (TODO)

  - name: Service methods
    description: |-
      (TODO)

  - name: ZeroTier methods
    description: |-
      (TODO)

  - name: Health Ports
    description: |-
      <SchemaDefinition schemaRef="#/components/schemas/HealthPorts" />

  - name: Health Services
    description: |-
      <SchemaDefinition schemaRef="#/components/schemas/HealthServices" />

  - name: Service Status
    description: |-
      <SchemaDefinition schemaRef="#/components/schemas/ServiceStatus" />

  - name: Connection Status
    description: |-
      <SchemaDefinition schemaRef="#/components/schemas/ConnectStatus" />

  - name: Network Interface Status
    description: |-
      <SchemaDefinition schemaRef="#/components/schemas/NetWorkInterfaceStatus" />

  - name: ZeroTier Info
    description: |-
      <SchemaDefinition schemaRef="#/components/schemas/ZTInfo" />

  - name: Drive Info
    description: |-
      <SchemaDefinition schemaRef="#/components/schemas/DriveInfo" />

  - name: Device Info
    description: |-
      <SchemaDefinition schemaRef="#/components/schemas/DeviceInfo" />

  - name: GPU Info
    description: |-
      <SchemaDefinition schemaRef="#/components/schemas/GPUInfo" />

  - name: GPU Status
    description: |-
      <SchemaDefinition schemaRef="#/components/schemas/GPUStatus" />

  - name: GPU Application
    description: |-
      <SchemaDefinition schemaRef="#/components/schemas/GPUApplication" />

  - name: Seventh methods
    description: |-
      <SchemaDefinition schemaRef="#/components/schemas/Seventh" />

  - name: SSH methods
    description: |-
      (TODO)

  - name: DLNA methods
    description: |-
      (TODO)

x-tagGroups:
  - name: Methods
    tags:
      - Connect methods
      - Device methods
      - File methods
      - GPU methods
      - Health methods
      - Network methods
      - Service methods
      - ZeroTier methods
      - Seventh methods
      - SSH methods
      - DLNA methods

  - name: Schemas
    tags:
      - Connection Status
      - Device Info
      - Drive Info
      - GPU Application
      - GPU Info
      - GPU Status
      - Health Ports
      - Health Services
      - Network Interface Status
      - Service Status
      - ZeroTier Info
      - Seventh
      - SSH

security:
  - access_token: []

paths:
  /health/services:
    get:
      tags:
        - Health methods
      summary: Get service status
      description: |-
        Get running status of each `casaos-*` service.
      operationId: getHealthServices
      responses:
        "200":
          $ref: "#/components/responses/GetHealthServicesOK"
        "500":
          $ref: "#/components/responses/ResponseInternalServerError"

  /health/ports:
    get:
      tags:
        - Health methods
      summary: Get port in use
      operationId: getHealthPorts
      responses:
        "200":
          $ref: "#/components/responses/GetHealthPortsOK"
        "500":
          $ref: "#/components/responses/ResponseInternalServerError"

  /health/logs:
    get:
      tags:
        - Health methods
      summary: Get log
      operationId: getHealthlogs
      responses:
        "200":
          description: OK
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        "500":
          $ref: "#/components/responses/ResponseInternalServerError"

  /service/{service_id}/status:
    get:
      tags:
        - Service methods
      summary: Getting Service Status
      description: |-
        Getting Service Status
      operationId: getServiceStatus
      parameters:
        - name: service_id
          in: path
          description: service number
          required: true
          schema:
            type: integer
      responses:
        "200":
          $ref: "#/components/responses/ServiceOK"
        "400":
          $ref: "#/components/responses/ResponseClientServerError"
        "500":
          $ref: "#/components/responses/ResponseInternalServerError"

    put:
      tags:
        - Service methods
      summary: Starting and stopping services
      description: |-
        Starting and stopping services
      operationId: setServiceStatus
      parameters:
        - name: service_id
          in: path
          description: service number
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  enum:
                    - start
                    - stop
                  type: string
                  example: "start"
      responses:
        "200":
          $ref: "#/components/responses/ServiceOK"
        "400":
          $ref: "#/components/responses/ResponseClientServerError"
        "500":
          $ref: "#/components/responses/ResponseInternalServerError"

  /file/test:
    get:
      tags:
        - File methods
      summary: Test file methods
      description: |-
        Test file methods.
      operationId: getFileTest
      responses:
        "200":
          $ref: "#/components/responses/ResponseOK"
        "500":
          $ref: "#/components/responses/ResponseInternalServerError"

  /zt/info:
    get:
      tags:
        - ZeroTier methods
      summary: Get Zerotier info
      description: |-
        Get Zerotier info.
      operationId: getZerotierInfo
      responses:
        "200":
          $ref: "#/components/responses/GetZTInfoOK"
        "400":
          $ref: "#/components/responses/ResponseInternalServerError"
        "500":
          $ref: "#/components/responses/ResponseInternalServerError"

  /zt/status:
    put:
      tags:
        - ZeroTier methods
      summary: Set Zerotier network status
      description: |-
        Set Zerotier network status.
      operationId: setZerotierNetworkStatus
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  enum:
                    - online
                    - offline
                    - reset
                  type: string
                  example: "online"
      responses:
        "200":
          $ref: "#/components/responses/GetZTInfoOK"
        "500":
          $ref: "#/components/responses/ResponseInternalServerError"

  /connect/status:
    get:
      tags:
        - Connect methods
      summary: Get connect status
      description: |-
        Get connect status.
      operationId: getConnectStatus
      responses:
        "200":
          $ref: "#/components/responses/GetConnectStatusOK"
        "500":
          $ref: "#/components/responses/ResponseInternalServerError"

  /network/interfaces:
    get:
      tags:
        - Network methods
      summary: Get network interfaces status
      description: |-
        Get network interfaces status.
      operationId: getNetworkInterfaces
      responses:
        "200":
          $ref: "#/components/responses/GetInterfacesOK"
        "500":
          $ref: "#/components/responses/ResponseInternalServerError"

  /network/settings:
    put:
      tags:
        - Network methods
      summary: Set network interface ip
      description: |-
        Set network interface ip.
      operationId: setNetworkInterfaceIP
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NetworkManagerData"
      responses:
        "200":
          $ref: "#/components/responses/ResponseOK"
        "500":
          $ref: "#/components/responses/ResponseInternalServerError"
    get:
      tags:
        - Network methods
      summary: Get network interface settings
      description: |-
        Get network interface settings.
      operationId: getNetworkInterfaceSettings
      parameters:
        - name: interface_name
          in: query
          description: interface name
          required: true
          schema:
            type: string
      responses:
        "200":
          $ref: "#/components/responses/GetNetworkInterfaceSettingsOK"
        "500":
          $ref: "#/components/responses/ResponseInternalServerError"

  /device/info:
    get:
      tags:
        - Device methods
      summary: Get device info
      description: |-
        Get device info.
      operationId: getDeviceInfo
      responses:
        "200":
          $ref: "#/components/responses/GetDeviceInfoOK"
        "500":
          $ref: "#/components/responses/ResponseInternalServerError"
    put:
      tags:
        - Device methods
      summary: put device info methods
      description: |-
        put device info methods.
      operationId: putDeviceInfo
      requestBody:
        $ref: "#/components/requestBodies/DeviceInfoBody"
      responses:
        "200":
          $ref: "#/components/responses/ResponseOK"
        "500":
          $ref: "#/components/responses/ResponseInternalServerError"

  /gpu:
    get:
      tags:
        - GPU methods
      summary: Get GPU list
      description: |-
        Get GPU status.
      operationId: getGPUList
      parameters:
        - name: size
          in: query
          description: gpu memory size bytes
          required: false
          schema:
            type: integer
            example: 1000000000
        - name: avx2
          in: query
          description: cpu support avx2
          required: false
          schema:
            type: boolean
      responses:
        "200":
          $ref: "#/components/responses/GetGPUListOK"
        "500":
          $ref: "#/components/responses/ResponseInternalServerError"

  /gpu/status:
    get:
      tags:
        - GPU methods
      summary: Get GPU status
      description: |-
        Get GPU status.
      operationId: getGPUStatus
      responses:
        "200":
          $ref: "#/components/responses/GetGPUStatusOK"
        "500":
          $ref: "#/components/responses/ResponseInternalServerError"

  /gpu/applications:
    get:
      tags:
        - GPU methods
      summary: Get GPU applications
      description: |-
        Get GPU applications.
      operationId: getGPUApplications
      responses:
        "200":
          $ref: "#/components/responses/GetApplicationsOK"
        "500":
          $ref: "#/components/responses/ResponseInternalServerError"

  /gpu/applications/{store_app_id}:
    put:
      tags:
        - GPU methods
      summary: Set GPU applications
      description: |-
        Set GPU applications.
      operationId: setGPUApplicationsStatus
      parameters:
        - name: store_app_id
          in: path
          description: store app id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  enum:
                    - start
                    - stop
                  type: string
                  example: "start"
      responses:
        "200":
          $ref: "#/components/responses/ResponseOK"
        "500":
          $ref: "#/components/responses/ResponseInternalServerError"

  /seventh:
    put:
      tags:
        - Seventh Light
      summary: Set seventh light status
      description: |-
        Set seventh light status.
      operationId: setSeventhLight
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Seventh"
      responses:
        "200":
          $ref: "#/components/responses/ResponseOK"
        "500":
          $ref: "#/components/responses/ResponseInternalServerError"

  /ssh:
    put:
      tags:
        - SSH methods
      summary: Enable or disable ssh
      description: |-
        Enable or disable ssh.
      operationId: setSSHStatus
      parameters:
        - name: status
          in: query
          description: ssh status
          required: true
          schema:
            type: string
            enum:
              - enable
              - disable
            example: "enable"
      responses:
        "200":
          $ref: "#/components/responses/ResponseOK"
        "500":
          $ref: "#/components/responses/ResponseInternalServerError"
    get:
      tags:
        - SSH methods
      summary: Get SSH status
      description: |-
        Get SSH status.
      operationId: getSSHStatus
      responses:
        "200":
          $ref: "#/components/responses/GetSSHStatusOK"
        "500":
          $ref: "#/components/responses/ResponseInternalServerError"

  /tty/btop:
    post:
      tags:
        - Btop methods
      description: |-
        Start a btop in ttyd. and return a port
      operationId: startBtopAndReturnPort
      responses:
        "200":
          $ref: "#/components/responses/StartTTYOK"
        "500":
          $ref: "#/components/responses/ResponseInternalServerError"

  /dlna:
    get:
      tags:
        - DLNA methods
      summary: Get DLNA service status
      description: |-
        Get DLNA service status.
      operationId: getDLNAStatus
      responses:
        "200":
          $ref: "#/components/responses/GetDLNAStatusOK"
        "500":
          $ref: "#/components/responses/ResponseInternalServerError"
    put:
      tags:
        - DLNA methods
      summary: Enable or disable DLNA service
      description: |-
        Enable or disable DLNA service.
      operationId: setDLNAStatus
      parameters:
        - name: status
          in: query
          description: dlna status
          required: true
          schema:
            type: string
            enum:
              - enable
              - disable
            example: "enable"
      responses:
        "200":
          $ref: "#/components/responses/ResponseOK"
        "500":
          $ref: "#/components/responses/ResponseInternalServerError"

  /dlna/config:
    get:
      tags:
        - DLNA methods
      summary: Get DLNA custom configuration
      description: |-
        Get DLNA custom configuration.
      operationId: getDLNACustomConfig
      responses:
        "200":
          $ref: "#/components/responses/GetDLNAConfigOK"
        "500":
          $ref: "#/components/responses/ResponseInternalServerError"
    put:
      tags:
        - DLNA methods
      summary: Update DLNA custom configuration
      description: |-
        Update DLNA custom configuration.
      operationId: setDLNACustomConfig
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DLNACustomConfig"
      responses:
        "200":
          description: DLNA configuration updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
        "500":
          $ref: "#/components/responses/ResponseInternalServerError"

components:
  securitySchemes:
    access_token:
      type: apiKey
      in: header
      name: Authorization

  responses:
    ResponseOK:
      description: OK
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/BaseResponse"

    ResponseInternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/BaseResponse"

    ResponseClientServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/BaseResponse"

    GetGPUListOK:
      description: OK
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/BaseResponse"
              - properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/GPUInfo"

    GetGPUStatusOK:
      description: OK
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/BaseResponse"
              - properties:
                  data:
                    $ref: "#/components/schemas/GPUStatus"

    GetApplicationsOK:
      description: OK
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/BaseResponse"
              - properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/GPUApplication"

    GetHealthServicesOK:
      description: OK
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/BaseResponse"
              - properties:
                  data:
                    $ref: "#/components/schemas/HealthServices"

    GetInterfacesOK:
      description: OK
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/InterfaceList"

    GetDeviceInfoOK:
      description: OK
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/DeviceInfo"

    GetConnectStatusOK:
      description: OK
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ConnectStatus"

    GetHealthPortsOK:
      description: OK
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/BaseResponse"
              - properties:
                  data:
                    $ref: "#/components/schemas/HealthPorts"

    GetZTInfoOK:
      description: OK
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ZTInfo"

    ServiceOK:
      description: OK
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ServiceStatus"

    GetSSHStatusOK:
      description: OK
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/BaseResponse"
              - properties:
                  data:
                    $ref: "#/components/schemas/SSHStatus"

    GetNetworkInterfaceSettingsOK:
      description: OK
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/BaseResponse"
              - properties:
                  data:
                    $ref: "#/components/schemas/NetworkManagerData"

    GetDLNAStatusOK:
      description: OK
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/BaseResponse"
              - properties:
                  data:
                    $ref: "#/components/schemas/DLNAStatus"

    GetDLNAConfigOK:
      description: OK
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/BaseResponse"
              - properties:
                  data:
                    $ref: "#/components/schemas/DLNACustomConfig"

    StartTTYOK:
      description: OK
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/BaseResponse"
              - properties:
                  data:
                    $ref: "#/components/schemas/TTY"
            
  requestBodies:
    DeviceInfoBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/DriveInfo"

  schemas:
    BaseResponse:
      properties:
        message:
          readOnly: true
          description: message returned by server side if there is any
          type: string
          example: ""

    HealthServices:
      properties:
        running:
          type: array
          items:
            type: string
            example: "casaos-gateway.service"
        not_running:
          type: array
          items:
            type: string
            example: "casaos.service"

    HealthPorts:
      properties:
        tcp:
          type: array
          items:
            type: integer
            example: 80
          x-go-name: TCP
        udp:
          type: array
          items:
            type: integer
            example: 53
          x-go-name: UDP

    ZTInfo:
      properties:
        id:
          type: string
          example: "1234567890"
        name:
          type: string
          example: "CasaOS"
        status:
          type: string
          example: "online"
        ip:
          type: string
          example: "1.1.1.1"

    ServiceStatus:
      properties:
        name:
          type: string
          example: "CasaOS"
        status:
          type: string
          example: "start"

    ConnectStatus:
      required:
        - status
        - name
        - model
        - ip
        - theoretical_speed
      properties:
        theoretical_speed:
          type: integer
          format: int64
          example: 1000
        model:
          type: string
          example: "ZimaCube"
        ip:
          type: string
          example: "192.168.3.2"
        status:
          type: string
          enum:
            - LAN
            - Thunderbolt
            - Remote
            - Unknown
          example: "LAN"
        name:
          type: string
          example: "ZimaCube"

    InterfaceList:
      type: array
      items:
        $ref: "#/components/schemas/NetWorkInterfaceStatus"

    NetWorkInterfaceStatus:
      required:
        - name
        - theoretical_speed
        - negotiated_speed
        - index
      properties:
        name:
          type: string
          example: "GHJDKK"
        model:
          type: string
          example: "zimacube"
        vendor:
          type: string
          example: "Intel"
        product:
          type: string
          example: "Intel(R) Ethernet Connection (2) I219-V"
        ip:
          type: string
          example: "192.168.2.3"
        mac:
          type: string
          example: "00:00:00:00:00:00"
        theoretical_speed:
          type: integer
          format: int64
          example: 1000
        negotiated_speed:
          type: integer
          example: 100
        index:
          type: integer
          example: -1
        method:
          type: string
          example: "dhcp"
        connect_type:
          type: string

    DeviceInfo:
      required:
        - device_name
        - device_model
        - os_version
        - hash
      properties:
        device_name:
          type: string
          example: "zimaboard-box"
        device_model:
          type: string
          example: "box"
        os_version:
          type: string
          example: v0.4.3
        hash:
          type: string
          example: "sidnfnik39djv9wije9ijovij"

    GPUInfo:
      required:
        - name
        - uuid
        - memory_total
        - memory_used
        - memory_free
        - memory_utilization
        - temperature
        - power_draw
        - power_limit
        - utilization
      properties:
        name:
          type: string
          example: "NVIDIA GeForce RTX 3080"
        uuid:
          type: string
          example: "GPU-12345678-1234-1234-1234-123456789012"
        memory_total:
          type: integer
          format: int64
          example: 1000
        memory_used:
          type: integer
          format: int64
          example: 100
        memory_free:
          type: integer
          format: int64
          example: 900
        memory_utilization:
          type: number
          example: 10
          format: float
        temperature:
          type: integer
          example: 50
        power_draw:
          type: number
          example: 10
          format: float
        power_limit:
          type: number
          example: 10
          format: float
        utilization:
          type: number
          example: 10
          format: float

    GPUApplication:
      required:
        - name
        - status
      properties:
        title:
          type: object
          additionalProperties:
            type: string
        name:
          type: string
          example: "casaos"
        status:
          enum:
            - start
            - stop
            - running
          type: string
          example: "start"
        icon:
          type: string
          example: "https://raw.githubusercontent.com/IceWhaleTech/logo/main/casaos/casaos_banner_twilight_blue_800px.png"

    DriveInfo:
      required:
        - device_name
      properties:
        # lan_ipv4:
        #   type: array
        #   items:
        #     type: string
        # port:
        #   type: integer
        #   example: 30
        device_name:
          type: string
          example: "zimaboard-box"
        # devicemodel:
        #   type: string
        #   example: "box"
        # initialized:
        #   type: boolean
        #   example: true
        # os_version:
        #   type: string
        #   example: v0.4.3
        # hash:
        #   type: string
        #   example: "sidnfnik39djv9wije9ijovij"

    GPUStatus:
      required:
        - number
        - last_number
      properties:
        number:
          type: integer
          example: 1
        last_number:
          type: integer
          example: 1
        show_dialog:
          type: boolean
          example: true

    Seventh:
      required:
        - id
        - speed
        - lightness
        - data
      properties:
        id:
          type: integer
          example: 1
          description: -|
            "The id of the light. The value is between 1 and 4."
        speed:
          type: integer
          example: 1
          description: -|
            "The speed of the light in the HSV color space. The value is between 0 and 5."
        lightness:
          type: integer
          example: 1
          description: -|
            "The lightness of the light in the HSV color space. The value is between 0 and 10."
        data:
          type: array
          items:
            $ref: "#/components/schemas/HSV"
            description: -|
              "The data of the light in the HSV color space."

    HSV:
      required:
        - h
        - s
        - v
      properties:
        h:
          type: integer
          example: 65535
          description: -|
            "The hue of the color in the HSV color space. The value is between 0 and 65535."
        s:
          type: integer
          example: 255
          description: -|
            "The saturation of the color in the HSV color space. The value is between 0 and 255."
        v:
          type: integer
          example: 255
          description: -|
            "The brightness of the color in the HSV color space. The value is between 0 and 255."
    SSHStatus:
      properties:
        status:
          type: string
          enum:
            - enabled
            - disabled
          example: "enable"

    NetworkManagerData:
      required:
        - interface_name
      properties:
        interface_name:
          type: string
          example: "eth0"
        ipv4:
          $ref: "#/components/schemas/NetworkManagerSettings"
        ipv6:
          $ref: "#/components/schemas/NetworkManagerSettings"

    NetworkManagerSettings:
      required:
        - ip
      properties:
        method:
          type: string
          enum:
            - DHCP
            - Manual
            - Close
          example: "dhcp"
        ip:
          type: string
          example: ""
        subnet_mask:
          type: string
          example: ""
        gateway_address:
          type: string
          example: ""
          default: ""
        dns:
          type: array
          items:
            type: string
          example: ["8.8.8.8", "1.1.1.1"]
          default: []

    DLNAStatus:
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - enabled
            - disabled
          example: "enable"

    DLNACustomConfig:
      type: object
      required:
        - friendly_name
        - media_dir
      properties:
        friendly_name:
          type: string
          example: "casaos"
        media_dir:
          type: array
          items:
            type: string
            example: "/home/media"

    TTY:
      required:
        - port
      properties:
        port:
          type: integer
          example: 30