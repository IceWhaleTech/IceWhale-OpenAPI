openapi: 3.1.0
info:
  title: ZimaOS AI OpenAPI
  description: ZimaOS AI OpenAPI
  version: 1.0.0
paths:
  /v1/ai/status:
    get:
      tags:
      - management
      summary: Get Status
      operationId: status
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusReponse'
  /v1/ai/tag:
    post:
      tags:
      - ai
      summary: tag image
      operationId: tag
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OCRRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagReponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/ai/generate:
    post:
      tags:
      - ai
      summary: generate content
      operationId: generate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIReponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/ai/ocr:
    post:
      tags:
      - ai
      summary: ocr image
      operationId: ocr
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OCRRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIReponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/ai/image:
    post:
      tags:
      - ai
      summary: handle image
      operationId: handle_image
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OCRRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIReponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/ai/summary:
    post:
      tags:
      - ai
      summary: Summary
      operationId: summary_file
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SummaryRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIReponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/ai/subtitle:
    post:
      tags:
      - ai
      summary: Subtitle
      operationId: subtitle
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubtitleRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIReponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/ai/enable/{function_name}:
    post:
      tags:
      - management
      summary: Enable Function
      operationId: enable_function
      parameters:
      - name: function_name
        in: path
        required: true
        schema:
          type: string
          title: Function Name
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToggleFunctionReponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/ai/disable/{function_name}:
    post:
      tags:
      - management
      summary: Disable Function
      operationId: disable_function
      parameters:
      - name: function_name
        in: path
        required: true
        schema:
          type: string
          title: Function Name
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToggleFunctionReponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/ai/log:
    get:
      tags:
      - management
      summary: Get Logs
      operationId: log
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogReponse'
  /v1/ai/api/status:
    get:
      tags:
      - management
      summary: Get Api Status
      operationId: getApiStatus
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIStatusResponse'
  /v1/ai/api-limit/status:
    get:
      tags:
      - management
      summary: Get Api Limit Status
      operationId: getApiLimitStatus
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APILimitStatusResponse'
    post:
      tags:
      - management
      summary: Set Api Limit Status
      operationId: setApiLimitStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/APILimitStatusRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APILimitSuccessResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/ai/api-limit/time-range:
    post:
      tags:
      - management
      summary: Set Allowed Time Range
      operationId: setApiLimitTimeRange
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeRangeRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APILimitSuccessResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v2/ai/function:
    get:
      tags:
      - management
      summary: List Function
      operationId: list_function
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FunctionReponse'
  /v2/ai/model:
    get:
      tags:
      - management
      summary: List Model
      operationId: list_model
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelReponse'
  /v2/ai/download:
    post:
      tags:
      - management
      summary: Download Model
      operationId: download_model
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DownloadModelRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DownloadReponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v2/ai/model/start:
    post:
      tags:
      - management
      summary: Start Model
      operationId: start_model
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToggleFunctionReponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v2/ai/model/stop:
    post:
      tags:
      - management
      summary: Stop Model
      operationId: stop_model
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToggleFunctionReponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
components:
  schemas:
    AIReponse:
      properties:
        result:
          type: string
          title: Result
      type: object
      required:
      - result
      title: AIReponse
    APILimitStatusRequest:
      properties:
        status:
          type: string
          title: Status
          example: open
      type: object
      required:
      - status
      title: APILimitStatusRequest
    APILimitStatusResponse:
      properties:
        status:
          type: string
          title: Status
          example: open
        allowed_start_time:
          type: string
          title: Allowed Start Time
          example: 00:00
        allowed_end_time:
          type: string
          title: Allowed End Time
          example: '23:59'
      type: object
      required:
      - status
      - allowed_start_time
      - allowed_end_time
      title: APILimitStatusResponse
    APILimitSuccessResponse:
      properties:
        success:
          type: boolean
          title: Success
          example: true
      type: object
      required:
      - success
      title: APILimitSuccessResponse
    APIStatusResponse:
      properties:
        allow_api_call:
          type: boolean
          title: Allow Api Call
          example: true
      type: object
      required:
      - allow_api_call
      title: APIStatusResponse
    DownloadModelRequest:
      properties:
        model_name:
          type: string
          title: Model Name
          example: minicpm
      type: object
      required:
      - model_name
      title: DownloadModelRequest
    DownloadReponse:
      properties:
        success:
          type: boolean
          title: Success
          example: true
        message:
          type: string
          title: Message
          example: start download model
      type: object
      required:
      - success
      - message
      title: DownloadReponse
    Function:
      properties:
        name:
          type: string
          title: Name
          example: ocr
        models:
          items:
            type: string
          type: array
          title: Models
          example:
          - minicpm
          - minicpm_q8
        file_allow_list:
          items:
            type: string
          type: array
          title: File Allow List
          example:
          - '*.jpg'
          - '*.png'
          - '*.jpeg'
      type: object
      required:
      - name
      - models
      - file_allow_list
      title: Function
    FunctionReponse:
      properties:
        function:
          items:
            $ref: '#/components/schemas/Function'
          type: array
          title: Function
          example:
          - file_allow_list:
            - '*.jpg'
            - '*.png'
            - '*.jpeg'
            models:
            - minicpm
            - minicpm_q8
            name: ocr
      type: object
      required:
      - function
      title: FunctionReponse
    GenerateRequest:
      properties:
        content:
          type: string
          title: Content
        prompt:
          type: string
          title: Prompt
          default: continue the following content.
        source:
          type: string
          title: Source
          default: unknown
      type: object
      required:
      - content
      title: GenerateRequest
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
          title: Detail
      type: object
      title: HTTPValidationError
    LogReponse:
      properties:
        logs:
          items:
            type: string
          type: array
          title: Logs
      type: object
      required:
      - logs
      title: LogReponse
    Model:
      properties:
        name:
          type: string
          title: Name
          example: minicpm
        functions:
          items:
            type: string
          type: array
          title: Functions
          example:
          - ocr
          - image
        status:
          $ref: '#/components/schemas/StatusEnum'
          example: available
      type: object
      required:
      - name
      - functions
      - status
      title: Model
    ModelReponse:
      properties:
        model:
          items:
            $ref: '#/components/schemas/Model'
          type: array
          title: Model
          example:
          - functions:
            - ocr
            - image
            name: minicpm
            status: available
      type: object
      required:
      - model
      title: ModelReponse
    ModelRequest:
      properties:
        model_name:
          type: string
          title: Model Name
          example: minicpm
      type: object
      required:
      - model_name
      title: ModelRequest
    OCRRequest:
      properties:
        file_path:
          type: string
          title: File Path
        prompt:
          type: string
          title: Prompt
          default: only return the text in the image
        source:
          type: string
          title: Source
          default: unknown
      type: object
      required:
      - file_path
      title: OCRRequest
    StatusEnum:
      type: string
      enum:
      - not_downloaded
      - downloading
      - available
      - running
      title: StatusEnum
    StatusReponse:
      properties:
        ocr:
          type: boolean
          title: Ocr
        image:
          type: boolean
          title: Image
        subtitle:
          type: boolean
          title: Subtitle
      type: object
      required:
      - ocr
      - image
      - subtitle
      title: StatusReponse
    SubtitleRequest:
      properties:
        file_path:
          type: string
          title: File Path
        subtitle_path:
          type: string
          title: Subtitle Path
        source:
          type: string
          title: Source
          default: unknown
      type: object
      required:
      - file_path
      - subtitle_path
      title: SubtitleRequest
    SummaryRequest:
      properties:
        file_path:
          type: string
          title: File Path
        prompt:
          type: string
          title: Prompt
          default: summary the following content.
        source:
          type: string
          title: Source
          default: unknown
      type: object
      required:
      - file_path
      title: SummaryRequest
    TagReponse:
      properties:
        tags:
          items:
            type: string
          type: array
          title: Tags
      type: object
      required:
      - tags
      title: TagReponse
    TimeRangeRequest:
      properties:
        start_time:
          type: string
          title: Start Time
          example: 00:00
        end_time:
          type: string
          title: End Time
          example: '23:59'
      type: object
      required:
      - start_time
      - end_time
      title: TimeRangeRequest
    ToggleFunctionReponse:
      properties:
        success:
          type: boolean
          title: Success
          example: true
      type: object
      required:
      - success
      title: ToggleFunctionReponse
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          type: array
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      type: object
      required:
      - loc
      - msg
      - type
      title: ValidationError
tags:
- name: ai
  description: all ai operation
- name: management
  description: management model
