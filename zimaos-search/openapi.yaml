openapi: 3.0.3

info:
  title: ZimaOS Search API
  version: v0.0.1
  description: |
    This is the API for ZimaOS Search.

servers:
  - url: /v2/search

paths:
  /ping: # The URL path of the API will be /v2/search/ping
    get:
      summary: Ping the API
      operationId: ping
      responses:
        "200": # For simplicity, we only define the 200 response. In real world, you should define all possible responses, such as 4xx, 5xx, etc.
          $ref: "#/components/responses/PongOK"

  /file: # The URL path of the API will be /v2/search/file
    post:
      summary: Search files
      description: Search for files using specific keywords and get relevant results.
      operationId: searchFile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - keyword
              type: object
              properties:
                keyword:
                  type: string
                  example: "test"
                  description: Search keyword to query the indexed documents.
                dir:
                  type: string
                  example: "/media/HDD-Storage"
                  description: Search dir path.
                opt:
                  type: string
                  example: "size>1024&&type:doc&&mtime>1730168689"
                  description: Advanced search options.
                cursor:
                  type: string
                  example: "last_resp_cursor"
                  description: Infinite scroll cursor
                count:
                  type: integer
                  default: 10
                  example: 100
                  description: Number of search results to return.
      responses:
          '200':
            $ref: "#/components/responses/SearchOK"
          '400':
            $ref: "#/components/responses/ResponseClientError"
          '404':
            $ref: "#/components/responses/ResponseNotFoundError"
          '500':
            $ref: "#/components/responses/ResponseInternalServerError"

components:
  responses:
    PongOK:
      description: OK
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/BaseResponse" # Inherit from BaseResponse
              - properties:
                  data:
                    $ref: "#/components/schemas/Pong" # The `data` property contains the actual `Pong` we want to return
    SearchOK:
      description: A list of search results.
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/BaseResponse" # Inherit from BaseResponse
              - properties:
                  data:
                    $ref: "#/components/schemas/SearchResult"
                  took:
                    type: integer
                    description: Time taken for the search in milliseconds.
                  timed_out:
                    type: boolean
                    description: Whether the search timed out or not.

    ResponseClientError:
      description: Client Error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/BaseResponse"
    ResponseInternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/BaseResponse"
    ResponseNotFoundError:
      description: Not found error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/BaseResponse"

  schemas:
    BaseResponse: # Every response should inherit from BaseResponse
      properties:
        message:
          description: message returned by server side if there is any
          type: string

    Pong:
      type: string
      example: Pong
    SearchResult:
      type: object
      properties:
        cursor:
          type: string
          description: Response cursor for infinite scroll next request.
        total:
          type: integer
          description: Total number of matching results.
        hits:
          type: array
          items:
            $ref: "#/components/schemas/HitsObject"
    HitsObject:
      type: object
      properties:
        _id:
          type: integer
          description: Unique ID of the document.
        _score:
          type: integer
          example: 1567
          description: Relevance score of the document.
        _source:
          $ref: "#/components/schemas/HitsObjectSource"
          description: The source data of the document.
    HitsObjectSource:
      type: object
      properties:
        name:
          type: string
          example: "filename_test.go"
          description: Matched document name.
        hl_name:
          type: string
          example: "filename_<b>test</b>.go"
          description: Highlighted matches in the document name.
        hl_content:
          type: string
          example: "file <b>test</b> ... <b>test</b> here ... first <b>test</b>"
          description: Highlighted matched snippets in the document content.
        dir:
          type: string
          example: "/media/ZimaOS-HD/test"
          description: File path of the document.
        size:
          type: integer
          example: 12345
          format: int64
          description: File size.
        is_dir:
          type: boolean
          example: false
          description: Is directory or not.
        is_ai:
          type: boolean
          example: false
          description: Matched by AI.
        mtime:
          type: integer
          example: 1730168689
          format: int64
          description: Modified time of file.